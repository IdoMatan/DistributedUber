// Copyright 2015 The gRPC Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";

option java_multiple_files = true;
option java_package = "generated";
option java_outer_classname = "RouteGuideProto";
option objc_class_prefix = "RTG";

package routeguide;

service RouteGuide {
  rpc SenderTest1(Msg1) returns (Msg2) {}
  rpc UpdateFollower(UpdateNewRideMessage) returns(Id){}
  rpc updatePDRide(UpdateNewRideMessage) returns (Id){}
  rpc BookRide(BookingRequestMessage) returns (BookResult){}
  rpc BookTripRide(BookingRequestMessage) returns (BookResult){}
  rpc UnBookTripRide(BookingRequestMessage) returns (BookResult){}
  rpc BookTripRideApproval(BookingApprovalMessage) returns (BookResult){}
  rpc BookRideInTrip(BookingRequestMessage) returns (BookResult){}
  rpc LiveMapIsEmpty(LiveMapIsEmptyMessage) returns (IsEmptyAgreement){}
  rpc GetSyncParam(CityMessage) returns (SyncParam){}

}

message PassengerProto{
  string firstName = 2;
  string lastName = 3;
  string origin = 4;
  string destination = 5;
  string departureDate = 6;
}

message BookingRequestMessage{
  string rideId = 1;
  PassengerProto passenger = 2;
}

message RideProto {
  string firstName = 1;
  string lastName = 2;
  string phoneNumber = 3;
  string origin = 4;
  string destination = 5;
  string departure_date = 6;
  int32 vacancies = 7;
  float pd = 8;
}

message UpdateNewRideMessage{
  RideProto ride = 1;
  string AddressedTo = 2;
}
message Id{
  string rideId = 1;
}

message BookingApprovalMessage{
  PassengerProto passenger = 1;
  string rideId = 2;
  RideProto rideProto = 3;
}

message BookResult {
  bool succeededToBook = 1;
  string rideId = 2;
  RideProto ride = 3;
}

message LiveMapIsEmptyMessage{
  string origin = 1;
  string destination = 2;
  string departureDate = 3;
}

message IsEmptyAgreement{
  bool isEmpty = 1;
}

message CityMessage{
  string city = 1;
}

message SyncParam{
  string syncParamProto = 1;
}


message Msg1 {
  int32 a = 1;
  int32 b = 2;
}

message Msg2 {
  int32 c = 1;
}